/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testImplementation 'org.assertj:assertj-core:3.8.0'
    // https://mvnrepository.com/artifact/org.jeasy/easy-random
    implementation 'org.jeasy:easy-random-core:5.0.0'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:1.7.25'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'

    implementation 'io.vavr:vavr:0.9.0'

    implementation 'org.ow2.asm:asm:9.4'
    implementation 'org.ow2.asm:asm-util:9.4'
}

application {
    // Define the main class for the application.
    mainClass = 'homework.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.release = 17
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
